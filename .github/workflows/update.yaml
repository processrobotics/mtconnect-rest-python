name: Update API Client

on:
  workflow_dispatch:

permissions:                    # Global permissions configuration starts here
  contents: write               # 'read' access to repository contents
  pull-requests: write          # 'write' access to pull requests

jobs:
  update-client:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull and run Docker image
        run: |
          docker pull mtconnect/agent:latest
          docker run -d --network host -v ./.github/workflows/agent:/home/agent mtconnect/agent:latest mtcagent run agent.json
          timeout=90
          start_time=$(date +%s)
          echo "Waiting for server to start. Will try every 10s until valid response or timeout of $timeout seconds"
          while true; do
            echo "Checking if agent is up..."
            docker ps -a
            if curl -s http://localhost:5000 > /dev/null; then
              echo "Agent is up"
              break
            else
              echo "No response from agent (yet)"
            fi
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for server; giving up"
              exit 1
            fi
            echo "Waiting 10s before trying again"
            sleep 10
          done

      - name: Fetch Swagger specification
        run: |
          curl http://localhost:5000/swagger -o swagger.json

      - name: Generate Python client
        run: |
          docker run --rm -v ${PWD}:/local swaggerapi/swagger-codegen-cli-v3 generate \
            -i /local/swagger.json \
            -l python \
            -c /local/config.json

      - name: Create new branch
        run: |
          BRANCH_NAME="update-client-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update Python client from latest API specification"
          git push origin $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          # Debug info
          echo "Branch created with changes:"
          git show --stat
      - name: Verify branch exists
        run: |
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/${{ env.BRANCH_NAME }}; then
            echo "Branch exists on remote"
          else
            echo "Error: Branch not found on remote"
            exit 1
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update Python client from latest API specification"
          body: "Automatically generated PR to update Python client based on latest API specification"
          branch: ${{ env.BRANCH_NAME }}
          base: main
          labels: automated-pr,client-update
          delete-branch: false